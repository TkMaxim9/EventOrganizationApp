// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: emailsender.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendEventNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EmailAddresses []string               `protobuf:"bytes,1,rep,name=emailAddresses,proto3" json:"emailAddresses,omitempty"`
	EventName      string                 `protobuf:"bytes,2,opt,name=eventName,proto3" json:"eventName,omitempty"`
	EventDate      string                 `protobuf:"bytes,3,opt,name=eventDate,proto3" json:"eventDate,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendEventNotificationRequest) Reset() {
	*x = SendEventNotificationRequest{}
	mi := &file_emailsender_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEventNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventNotificationRequest) ProtoMessage() {}

func (x *SendEventNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emailsender_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendEventNotificationRequest) Descriptor() ([]byte, []int) {
	return file_emailsender_proto_rawDescGZIP(), []int{0}
}

func (x *SendEventNotificationRequest) GetEmailAddresses() []string {
	if x != nil {
		return x.EmailAddresses
	}
	return nil
}

func (x *SendEventNotificationRequest) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *SendEventNotificationRequest) GetEventDate() string {
	if x != nil {
		return x.EventDate
	}
	return ""
}

type SendEventNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSucceed     bool                   `protobuf:"varint,1,opt,name=isSucceed,proto3" json:"isSucceed,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEventNotificationResponse) Reset() {
	*x = SendEventNotificationResponse{}
	mi := &file_emailsender_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEventNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventNotificationResponse) ProtoMessage() {}

func (x *SendEventNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emailsender_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendEventNotificationResponse) Descriptor() ([]byte, []int) {
	return file_emailsender_proto_rawDescGZIP(), []int{1}
}

func (x *SendEventNotificationResponse) GetIsSucceed() bool {
	if x != nil {
		return x.IsSucceed
	}
	return false
}

func (x *SendEventNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_emailsender_proto protoreflect.FileDescriptor

var file_emailsender_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x57, 0x0a,
	0x1d, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x6d, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_emailsender_proto_rawDescOnce sync.Once
	file_emailsender_proto_rawDescData []byte
)

func file_emailsender_proto_rawDescGZIP() []byte {
	file_emailsender_proto_rawDescOnce.Do(func() {
		file_emailsender_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_emailsender_proto_rawDesc), len(file_emailsender_proto_rawDesc)))
	})
	return file_emailsender_proto_rawDescData
}

var file_emailsender_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_emailsender_proto_goTypes = []any{
	(*SendEventNotificationRequest)(nil),  // 0: api.SendEventNotificationRequest
	(*SendEventNotificationResponse)(nil), // 1: api.SendEventNotificationResponse
}
var file_emailsender_proto_depIdxs = []int32{
	0, // 0: api.EmailSender.SendEventNotification:input_type -> api.SendEventNotificationRequest
	1, // 1: api.EmailSender.SendEventNotification:output_type -> api.SendEventNotificationResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_emailsender_proto_init() }
func file_emailsender_proto_init() {
	if File_emailsender_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_emailsender_proto_rawDesc), len(file_emailsender_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_emailsender_proto_goTypes,
		DependencyIndexes: file_emailsender_proto_depIdxs,
		MessageInfos:      file_emailsender_proto_msgTypes,
	}.Build()
	File_emailsender_proto = out.File
	file_emailsender_proto_goTypes = nil
	file_emailsender_proto_depIdxs = nil
}
